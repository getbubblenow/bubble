function {{JS_PREFIX}}_getElementsByXPath(xpath, parent) {
    let results = [];
    let query = document.evaluate(xpath, parent || document, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    for (let i = 0, length = query.snapshotLength; i < length; ++i) {
        results.push(query.snapshotItem(i));
    }
    return results;
}

const {{JS_PREFIX}}_site_host = location.protocol + '//' + window.location.hostname + '/';

function {{JS_PREFIX}}_apply_blocks(blocked_users) {
    let articles = {{JS_PREFIX}}_getElementsByXPath('//div[@role="article" and @aria-posinset]');
    let sitePrefix = {{JS_PREFIX}}_site_host;
    const log = {{PAGE_PREFIX}}_log;
    for (let i=0; i<articles.length; i++) {
        let article = articles[i];
        let authorLink = article.getElementsByTagName('a')[0];
        if (typeof authorLink.href === 'undefined') {
            continue;
        }
        let authorHref = authorLink.href;
        if (!authorHref.startsWith(sitePrefix)) continue;
        let authorName = authorHref.substring(sitePrefix.length);
        let qPos = authorName.indexOf('?');
        if (qPos !== -1) {
            authorName = authorName.substring(0, qPos);
            authorLink.href = sitePrefix + authorName;
        }
        if (blocked_users !== null && blocked_users.includes(authorName)) {
            if (article.className.indexOf('{{JS_PREFIX}}_bub_blocked') === -1) {
                log('removing post by author: ' + authorName);
                article.className = article.className += ' {{JS_PREFIX}}_bub_blocked';
                try {
                    const feedItem = article.parentElement.parentElement.parentElement.parentElement.parentElement;
                    log('nuking: '+feedItem.outerHTML.substring(0, 40))
                    feedItem.parentElement.removeChild(feedItem);
                } catch (e) {
                    log('error removing post by author: ' + authorName + ': ' + e);
                }
            } else {
                log('found post marked removed but still present (??) by author: ' + authorName);
            }

        } else {
            // have we visited this article before?
            if (article.innerHTML.indexOf('_bubble') === -1) {
                log('VISITING article node for author: '+authorName);
                try {
                    article.className = article.className += ' {{JS_PREFIX}}_bubble_block';
                    if (typeof authorLink.parentNode.parentNode.nextSibling === 'undefined' || authorLink.parentNode.parentNode.nextSibling === null) {
                        console.log('authorLink.parentNode.parentNode.nextSibling was undefined or null, skipping; outerHTML='+authorLink.parentNode.parentNode.outerHTML);
                        continue;
                    }
                    const spans = authorLink.parentNode.parentNode.nextSibling.getElementsByTagName('span');
                    const sepSpans = Array.from(spans).filter(s => s.innerHTML === ' · ');
                    if (sepSpans.length === 0) {
                        log('no insertion point found for author: ' + authorName);
                        continue;
                    }
                    sepSpans.map(sepSpan => {
                        const imgHolder = document.createElement('img');
                        imgHolder.src = '/__bubble/api/filter/assets/{{BUBBLE_REQUEST_ID}}/UserBlocker/icon?raw=true';
                        imgHolder.width = 16;

                        const blockLink = document.createElement('a');
                        blockLink.addEventListener("click", function (event) {
                            {{JS_PREFIX}}_block_user(authorName);
                            try {
                                const feedItem = article.parentElement.parentElement.parentElement.parentElement.parentElement;
                                log('click nuking: '+feedItem.outerHTML.substring(0, 40))
                                feedItem.parentElement.removeChild(feedItem);
                            } catch (e) {
                                log('click error removing post by author: ' + authorName + ': ' + e);
                            }
                            return false;
                        });
                        // blockLink.appendChild(line);
                        blockLink.appendChild(imgHolder);

                        // log('inserting block icon for ' + authorName + '...');
                        sepSpan.parentNode.appendChild(blockLink);
                        sepSpan.parentNode.appendChild(document.createTextNode(' · '));
                    });

                } catch (e) {
                    log('badness: '+e);
                }
            }
        }
    }
}

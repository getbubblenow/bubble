{{{ICON_JS}}}

let {{JS_PREFIX}}_app_details = false;
let {{JS_PREFIX}}_last_stats = null;
let {{JS_PREFIX}}_app_stats_last_change = 0;
const {{JS_PREFIX}}_app_stats_timeout = 35000;
const {{PAGE_PREFIX}}_extra_blocks = {};

const {{PAGE_PREFIX}}_add_extra_block = function(name) {
    if (!(name in {{PAGE_PREFIX}}_extra_blocks)) {
        {{PAGE_PREFIX}}_extra_blocks[name] = 1;
    } else {
        {{PAGE_PREFIX}}_extra_blocks[name] = {{PAGE_PREFIX}}_extra_blocks[name] + 1;
    }
}

const {{PAGE_PREFIX}}_add_extra_allow = function() {
    if (!('_' in {{PAGE_PREFIX}}_extra_blocks)) {
        {{PAGE_PREFIX}}_extra_blocks['_'] = 1;
    } else {
        {{PAGE_PREFIX}}_extra_blocks['_'] = {{PAGE_PREFIX}}_extra_blocks['_'] + 1;
    }
}

const {{PAGE_PREFIX}}_remove_extra_allow = function() {
    if (!('_' in {{PAGE_PREFIX}}_extra_blocks)) {
        {{PAGE_PREFIX}}_extra_blocks['_'] = 0;
    } else {
        {{PAGE_PREFIX}}_extra_blocks['_'] = {{PAGE_PREFIX}}_extra_blocks['_'] - 1;
    }
}

function {{JS_PREFIX}}_toggle_app_details(ev) {
    const detailsDivId = '{{JS_PREFIX}}_detailsDiv';
    let detailsDiv = document.getElementById(detailsDivId);
    if ({{JS_PREFIX}}_app_details) {
        {{JS_PREFIX}}_app_details = false;
        if (detailsDiv != null) {
            detailsDiv.style.display = 'none';
            while (detailsDiv.firstChild) {
                detailsDiv.removeChild(detailsDiv.lastChild);
            }
        }
    } else {
        const extraKeys = Object.keys({{PAGE_PREFIX}}_extra_blocks);
        if (extraKeys.length === 0
            && ({{JS_PREFIX}}_last_stats === null || {{JS_PREFIX}}_last_stats.blocks.length === 0)) {
            return;
        }
        {{JS_PREFIX}}_app_details = true;
        {{JS_PREFIX}}_app_refresh(function () {
            if ({{JS_PREFIX}}_last_stats != null) {
                if (detailsDiv === null) {
                    detailsDiv = {{PAGE_PREFIX}}_createDetailsDiv(detailsDivId);
                    document.getElementsByTagName('body')[0].appendChild(detailsDiv);
                    detailsDiv.onclick = function (ev) {
                        {{JS_PREFIX}}_toggle_app_details();
                    }
                }
                while (detailsDiv.firstChild) {
                    detailsDiv.removeChild(detailsDiv.lastChild);
                }
                detailsDiv.style.display = 'block';
                // add rows for blocked stuff...
                if (extraKeys.length > 0) {
                    extraKeys.sort(function (a, b) {
                        return a.localeCompare(b, '{{ACCOUNT_LANG}}', {'sensitivity': 'base'});
                    });
                    let totalBlocks = 0;
                    let totalAllowed = 0;
                    extraKeys.forEach(k => {
                        const blockCount = {{PAGE_PREFIX}}_extra_blocks[k];
                        if (k === '_') {
                            totalAllowed = blockCount;
                            return;
                        }
                        totalBlocks += blockCount;
                        const useEm = k.startsWith('*');
                        const token = useEm ? k.substring(1) : k;
                        const entryDiv = document.createElement('div');
                        if (useEm) {
                            const em = document.createElement('em');
                            em.appendChild(document.createTextNode(token + ': ' + blockCount));
                            entryDiv.appendChild(em);
                        } else {
                            const entryText = document.createTextNode(token + ': ' + blockCount);
                            entryDiv.appendChild(entryText);
                        }
                        detailsDiv.appendChild(entryDiv);
                    });
                    const extraSummary = document.createElement('strong');
                    const summaryLabel = {{PAGE_PREFIX}}_msg_or_default({{JS_PREFIX}}_messages, 'web_signalNoiseRatio', 'signal/noise');
                    const fullTotal = totalAllowed + totalBlocks;
                    const ratio = 100.0 * (totalAllowed / fullTotal);
                    extraSummary.appendChild(document.createTextNode(summaryLabel + ': ' + totalAllowed + '/' + fullTotal + ' â‰ˆ ' + ratio.toLocaleString('{{ACCOUNT_LOCALE_HYPHEN}}', { maximumSignificantDigits: 3 }) + '%'));
                    detailsDiv.appendChild(extraSummary);
                    detailsDiv.appendChild(document.createElement('hr'));
                }
                for (let i = 0; i < {{JS_PREFIX}}_last_stats.blocks.length; i++) {
                    const entry = {{JS_PREFIX}}_last_stats.blocks[i];
                    const entryDiv = document.createElement('div');
                    const entryText = document.createTextNode(entry.fqdn + ': ' + entry.count);
                    entryDiv.appendChild(entryText);
                    detailsDiv.appendChild(entryDiv);
                }
            }
        })
    }
}

const {{JS_PREFIX}}_app_refresh = function (displayFunc) {
    const requestOptions = { method: 'GET' };
    const block_stats_url = '/__bubble/api/filter/status/{{BUBBLE_REQUEST_ID}}';
    fetch(block_stats_url, requestOptions)
        .then(resp => {
            try {
                return resp.json();
            } catch (error) {
                console.log('cancelling window.interval, response not json: '+JSON.stringify(resp));
                window.clearInterval({{JS_PREFIX}}_app_refresh_interval);
            }
        })
        .then(data => {
            // console.log('stats = '+JSON.stringify(data));
            let icon = null;
            if (typeof data.total !== 'undefined') {
                if (JSON.stringify(data) !== JSON.stringify({{JS_PREFIX}}_last_stats)) {
                    {{JS_PREFIX}}_last_stats = data;
                    {{JS_PREFIX}}_app_stats_last_change = Date.now();
                    if (data.total === 0) {
                        icon = 'icon-green';
                    } else if (data.total < 5) {
                        icon = 'icon-yellow';
                    } else {
                        icon = 'icon-red';
                        if ({{JS_PREFIX}}_app_refresh_interval !== null) {
                            console.log('cancelling window.interval, red status');
                            window.clearInterval({{JS_PREFIX}}_app_refresh_interval);
                            {{JS_PREFIX}}_app_refresh_interval = null;
                        }
                    }
                    {{JS_PREFIX}}_app.icon = icon;
                    {{PAGE_PREFIX}}_setAppIconImg({{JS_PREFIX}}_app);

                } else if ({{JS_PREFIX}}_app_refresh_interval !== null && Date.now() - {{JS_PREFIX}}_app_stats_last_change > {{JS_PREFIX}}_app_stats_timeout) {
                    console.log('cancelling window.interval, stats unchanged for a while');
                    window.clearInterval({{JS_PREFIX}}_app_refresh_interval);
                    {{JS_PREFIX}}_app_refresh_interval = null;
                }
                if (typeof displayFunc === 'function') {
                    displayFunc();
                }
            }
        }).catch((error) => {
            if ({{JS_PREFIX}}_app_refresh_interval !== null) {
                console.log('cancelling window.interval, due to error: ' + error);
                window.clearInterval({{JS_PREFIX}}_app_refresh_interval);
                {{JS_PREFIX}}_app_refresh_interval = null;
            } else {
                console.log('error: ' + error);
            }
    });
}

let {{JS_PREFIX}}_app_refresh_interval = null;
const {{JS_PREFIX}}_app = {
    jsPrefix: '{{JS_PREFIX}}',
    app: '{{BUBBLE_APP_NAME}}',
    link: {{JS_PREFIX}}_toggle_app_details,
    icon: 'icon-gray',
    onReady: function () {
        {{JS_PREFIX}}_load_messages('web_', function (messages) {
                {{JS_PREFIX}}_messages = messages;
        })
        {{JS_PREFIX}}_app_refresh_interval = window.setInterval({{JS_PREFIX}}_app_refresh, 5000);
    }
};

{{PAGE_PREFIX}}_addBubbleApp({{JS_PREFIX}}_app);

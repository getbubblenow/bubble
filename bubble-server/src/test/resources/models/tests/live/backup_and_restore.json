[
  {
    "comment": "login as root on sage node",
    "connection": {
      "name": "sageConnection",
      "baseUri": "https://{{sageFqdn}}:{{serverConfig.nginxPort}}/api"
    },
    "request": {
      "session": "new",
      "uri": "auth/login",
      "entity": {
        "username": "root",
        "password": "password1!"
      }
    },
    "response": {
      "store": "nnRootAccount",
      "sessionName": "nnRootSession",
      "session": "token"
    }
  },

  {
    "comment": "load root account policy",
    "request": {
      "uri": "users/root/policy"
    },
    "response": {
      "store": "rootPolicy"
    }
  },

  {
    "comment": "add root@example.com as email contact for root user, if not already present",
    "onlyIf": "!rootPolicy.hasContact('root@example.com')",
    "include": "add_approved_contact",
    "params": {
      "username": "root",
      "userSession": "nnRootSession",
      "userConnection": "sageConnection",
      "rootSession": "nnRootSession",
      "rootConnection": "sageConnection",
      "contactInfo": "root@example.com",
      "contactLookup": "root@example.com",
      "authFactor": "not_required"
    }
  },

  {
    "comment": "launch a new bubble as a new user",
    "include": "new_bubble",
    "params": {
      "sageFqdn": "{{sageFqdn}}",
      "username": "bubble-user",
      "password": "password1!",
      "userSessionVar": "userSession",
      "network": "bubble-{{rand 5}}",
      "email": "bubble-user@example.com",
      "plan": "bubble",
      "networkVar": "bubbleNetwork",
      "bubbleConnectionVar": "bubbleConnection"
    }
  },

  {
    "before": "await_url .bubble 40m 20s",
    "comment": "add file to storage",
    "connection": { "name":  "bubbleConnection" },
    "request": {
      "session": "bubbleUserSession",
      "uri": "me/networks/{{bubbleNetwork.network}}/storage/write/test_file_{{bubbleNetwork.network}}.txt",
      "headers": { "Content-Type": "multipart/form-data" },
      "entity": {"file": "data:this is a test file: {{rand 20}}"}
    },
    "response": {
      "store": "fileMeta"
    }
  },

  {
    "comment": "add verified email to root account on new node",
    "include": "add_approved_contact",
    "params": {
      "username": "bubble-user",
      "userSession": "bubbleUserSession",
      "userConnection": "bubbleConnection",
      "contactInfo": "bubble-user@example.com",
      "contactLookup": "bubble-user@example.com",
      "authFactor": "not_required",
      "rootSession": "bubbleUserSession",
      "rootConnection": "bubbleConnection"
    }
  },

  {
    "comment": "add account",
    "connection": {"name": "bubbleConnection"},
    "request": {
      "uri": "users",
      "method": "put",
      "entity": {
        "name": "user1",
        "password": "password1!",
        "contact": {"type": "email", "info": "user-{{rand 5}}@example.com"}
      }
    },
    "response": {
      "store": "newUser"
    }
  },

  {
    "before": "sleep 24s",
    "comment": "lookup policy for new account",
    "request": { "uri": "users/user1/policy" },
    "response": { "store": "user1policy" }
  },

  {
    "comment": "backup network",
    "request": {
      "uri": "me/networks/{{bubbleNetwork.network}}/backups/test_backup",
      "method": "put"
    },
    "response": {
      "store": "backup"
    }
  },

  {
    "before": "await_url me/networks/{{bubbleNetwork.network}}/backups/test_backup?status=backup_completed 5m 10s",
    "comment": "find completed backup",
    "request": {
      "uri": "me/networks/{{bubbleNetwork.network}}/backups/test_backup"
    },
    "response": {
      "store": "backup",
      "check": [
        {"condition": "json.getStatus().name() == 'backup_completed'"}
      ]
    }
  },

  {
    "comment": "save network keys for new bubble",
    "include": "get_network_keys",
    "params": {
      "network": "{{bubbleNetwork.network}}",
      "rootEmail": "bubble-user@example.com",
      "networkKeysVar": "networkKeys",
      "networkKeysPassword": "Passw0rd!!"
    }
  },

  {
    "comment": "stop network from sage",
    "connection": { "name": "sageConnection" },
    "request": {
      "session": "userSession",
      "uri": "me/networks/{{bubbleNetwork.network}}/actions/stop",
      "method": "post"
    },
    "after": "verify_unreachable https://{{bubbleNetwork.fqdn}}:{{serverConfig.nginxPort}}/api/.bubble"
  },

  {
    "comment": "verify network is stopped",
    "request": {"uri": "me/networks/{{bubbleNetwork.network}}" },
    "response": {
      "check": [
        {"condition": "json.getState().name() == 'stopped'"}
      ]
    }
  },

  {
    "comment": "restore network from sage, provisions new node in restore mode, returns restoreKey",
    "request": {
      "uri": "me/networks/{{bubbleNetwork.network}}/actions/restore",
      "method": "post"
    },
    "response": {
      "store": "restoreNN",
      "check": [
        {"condition": "restoreNN.getNetwork() == bubbleNetwork.getNetwork()"}
      ]
    }
  },

  {
    "before": "await_url .bubble 40m 20s",
    "connection": {
      "name": "restoredBubbleConnection",
      "baseUri": "https://{{restoreNN.fqdn}}:{{serverConfig.nginxPort}}/api"
    },
    "comment": "restore node using restoreKey",
    "request": {
      "uri": "auth/restore/{{restoreNN.restoreKey}}",
      "entity": {
        "data": "{{networkKeys.data}}",
        "password": "Passw0rd!!"
      },
      "method": "put"
    },
    "after": "sleep 240s"  // give the restore some time to stop the server, restore and restart
  },

  {
    "before": "await_url .bubble 10m 20s",
    "comment": "login to restored bubble",
    "request": {
      "session": "new",
      "uri": "auth/login",
      "entity": {
        "name": "bubble-user",
        "password": "password1!"
      }
    },
    "response": {
      "store": "restoredUser",
      "sessionName": "restoredBubbleSession",
      "session": "token"
    }
  },

  {
    "comment": "verify account we added has been restored",
    "request": {
      "uri": "users/user1/policy"
    },
    "response": {
      "check": [ {"condition": "json.getFirstEmail() == user1policy.getFirstEmail()"} ]
    }
  },

  {
    "comment": "verify file we created is still there",
    "request": {
      "uri": "me/networks/{{restoreNN.network}}/storage/read/test_file_{{restoreNN.network}}.txt"
    },
    "response": {
      "raw": true
    }
  },

  {
    "comment": "stop the restored network from the sage node",
    "connection": { "name": "sageConnection" },
    "request": {
      "uri": "me/networks/{{restoreNN.network}}/actions/stop",
      "method": "post"
    }
  },

  {
    "comment": "delete restored bubble network from sage",
    "request": {
      "uri": "me/networks/{{restoreNN.network}}",
      "method": "delete"
    },
    "after": "verify_unreachable https://{{restoreNN.fqdn}}:{{serverConfig.nginxPort}}/api/me"
  }
]
[
  {
    "comment": "create a user account",
    "request": {
      "uri": "users",
      "method": "put",
      "entity": {
        "name": "test_user",
        "password": "password",
        "contact": {"type": "email", "info": "test-user@example.com"}
      }
    }
  },

  {
    "before": "sleep 22s",  // wait for account objects to be created
    "comment": "login as new user",
    "request": {
      "session": "new",
      "uri": "auth/login",
      "entity": {
        "name": "test_user",
        "password": "password"
      }
    },
    "response": {
      "store": "testAccount",
      "sessionName": "userSession",
      "session": "token"
    }
  },

  {
    "comment": "get payment methods, tokenize a credit card",
    "request": { "uri": "paymentMethods" },
    "response": {
      "store": "paymentMethods"
    },
    "after": "stripe_tokenize_card"
  },

  {
    "before": "sleep 1s",
    "comment": "as root, check email inbox for verification message",
    "request": {
      "session": "rootSession",
      "uri": "debug/inbox/email/test-user@example.com?type=request&action=verify&target=account"
    },
    "response": {
      "store": "emailInbox",
      "check": [
        {"condition": "'{{json.[0].ctx.message.messageType}}' === 'request'"},
        {"condition": "'{{json.[0].ctx.message.action}}' === 'verify'"},
        {"condition": "'{{json.[0].ctx.message.target}}' === 'account'"}
      ]
    }
  },

  {
    "comment": "approve email verification request",
    "request": {
      "session": "userSession",
      "uri": "auth/approve/{{emailInbox.[0].ctx.confirmationToken}}",
      "method": "post"
    }
  },

  {
    "comment": "get plans",
    "request": { "uri": "plans" },
    "response": {
      "store": "plans",
      "check": [{"condition": "json.length >= 1"}]
    }
  },

  {
    "comment": "add plan, using 'credit' payment method with a valid card token, creates a stripe customer",
    "request": {
      "uri": "me/plans",
      "method": "put",
      "entity": {
        "name": "test-net-{{rand 5}}",
        "domain": "{{defaultDomain}}",
        "locale": "en_US",
        "timezone": "EST",
        "plan": "{{plans.[0].name}}",
        "footprint": "US",
        "paymentMethodObject": {
          "paymentMethodType": "credit",
          "paymentInfo": "{{stripeToken}}"
        }
      }
    },
    "response": {
      "store": "accountPlan"
    }
  },

  {
    "before": "sleep 15s",
    "comment": "verify account payment methods, should be one",
    "request": { "uri": "me/paymentMethods" },
    "response": {
      "check": [
        {"condition": "json.length === 1"},
        {"condition": "json[0].getPaymentMethodType().name() === 'credit'"}
      ]
    }
  },

  {
    "comment": "verify account plans, should be one",
    "request": { "uri": "me/plans" },
    "response": {
      "check": [
        {"condition": "json.length === 1"},
        {"condition": "json[0].getName() === accountPlan.getName()"},
        {"condition": "json[0].enabled()"}
      ]
    }
  },

  {
    "comment": "verify account plan payment info",
    "request": { "uri": "me/plans/{{accountPlan.uuid}}/paymentMethod" },
    "response": {
      "store": "savedPaymentMethod",
      "check": [
        {"condition": "json.getPaymentMethodType().name() === 'credit'"},
        {"condition": "json.getMaskedPaymentInfo() === 'XXXX-XXXX-XXXX-4242'"}
      ]
    }
  },

  {
    "comment": "verify bill exists for new service with correct price and has been paid",
    "request": { "uri": "me/bills" },
    "response": {
      "store": "bills",
      "check": [
        {"condition": "json.length === 1"},
        {"condition": "json[0].getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[0].getQuantity() === 1"},
        {"condition": "json[0].getPrice() === {{plans.[0].price}}"},
        {"condition": "json[0].getTotal() === {{plans.[0].price}}"},
        {"condition": "json[0].getStatus().name() === 'paid'"}
      ]
    }
  },

  {
    "comment": "verify successful payment exists for new service",
    "request": { "uri": "me/payments" },
    "response": {
      "store": "payments",
      "check": [
        {"condition": "json.length === 1"},
        {"condition": "json[0].getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[0].getAmount() === {{plans.[0].price}}"},
        {"condition": "json[0].getType().name() === 'payment'"},
        {"condition": "json[0].getStatus().name() === 'success'"}
      ]
    }
  },

  {
    "comment": "verify successful payment has paid for the bill above",
    "request": { "uri": "me/plans/{{accountPlan.uuid}}/bills" },
    "response": {
      "check": [
        {"condition": "json.length === 1"},
        {"condition": "json[0].getUuid() === '{{bills.[0].uuid}}'"},
        {"condition": "json[0].getStatus().name() === 'paid'"},
        {"condition": "json[0].getRefundedAmount() === 0"}
      ]
    }
  },

  {
    "before": "fast_forward_and_bill 33d",
    "comment": "1st fast-forward: +33 days, verify a new bill exists for accountPlan",
    "request": { "uri": "me/plans/{{accountPlan.uuid}}/bills" },
    "response": {
      "check": [
        {"condition": "json.length === 2"},
        {"condition": "json[0].getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[0].getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[0].getQuantity() === 1"},
        {"condition": "json[0].getPrice() === {{plans.[0].price}}"},
        {"condition": "json[0].getTotal() === {{plans.[0].price}}"}
      ]
    }
  },

  {
    "comment": "1st fast-forward: verify a successful payment has been made for the new bill for accountPlan",
    "request": { "uri": "me/plans/{{accountPlan.uuid}}/payments" },
    "response": {
      "store": "plan2payments",
      "check": [
        {"condition": "json.length === 2"},
        {"condition": "json[0].getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[0].getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[0].getAmount() === {{plans.[0].price}}"},
        {"condition": "json[0].getStatus().name() === 'success'"},
        {"condition": "json[0].getBillObject().getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[0].getBillObject().getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[0].getBillObject().getQuantity() === 1"},
        {"condition": "json[0].getBillObject().getPrice() === {{plans.[0].price}}"},
        {"condition": "json[0].getBillObject().getTotal() === {{plans.[0].price}}"},
        {"condition": "json[0].getBillObject().getStatus().name() === 'paid'"}
      ]
    }
  },

  {
    "before": "fast_forward_and_bill 33d",
    "comment": "2nd fast-forward: fast-forward another +33 days, verify a new bill exists for accountPlan",
    "request": { "uri": "me/plans/{{accountPlan.uuid}}/bills" },
    "response": {
      "check": [
        {"condition": "json.length === 3"},
        {"condition": "json[0].getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[0].getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[0].getQuantity() === 1"},
        {"condition": "json[0].getPrice() === {{plans.[0].price}}"},
        {"condition": "json[0].getTotal() === {{plans.[0].price}}"}
      ]
    }
  },

  {
    "comment": "2nd fast-forward: verify a successful payment has been made for the new bill for accountPlan",
    "request": { "uri": "me/plans/{{accountPlan.uuid}}/payments" },
    "response": {
      "store": "plan2payments",
      "check": [
        {"condition": "json.length === 3"},
        {"condition": "json[0].getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[0].getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[0].getAmount() === {{plans.[0].price}}"},
        {"condition": "json[0].getStatus().name() === 'success'"},
        {"condition": "json[0].getBillObject().getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[0].getBillObject().getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[0].getBillObject().getQuantity() === 1"},
        {"condition": "json[0].getBillObject().getPrice() === {{plans.[0].price}}"},
        {"condition": "json[0].getBillObject().getTotal() === {{plans.[0].price}}"},
        {"condition": "json[0].getBillObject().getStatus().name() === 'paid'"}
      ]
    }
  },

  {
    "before": "fast_forward_and_bill 66d",
    "comment": "3rd fast-forward: fast-forward even more, +66 days, we have missed a billing cycle, so two new bills should be created",
    "request": { "uri": "me/plans/{{accountPlan.uuid}}/bills" },
    "response": {
      "check": [
        {"condition": "json.length === 5"},
        {"condition": "json[0].getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[0].getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[0].getQuantity() === 1"},
        {"condition": "json[0].getPrice() === {{plans.[0].price}}"},
        {"condition": "json[0].getTotal() === {{plans.[0].price}}"},
        {"condition": "json[1].getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[1].getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[1].getQuantity() === 1"},
        {"condition": "json[1].getPrice() === {{plans.[0].price}}"},
        {"condition": "json[1].getTotal() === {{plans.[0].price}}"}
      ]
    }
  },

  {
    "comment": "3rd fast-forward: verify a successful payment has been made for all new bills for accountPlan",
    "request": { "uri": "me/plans/{{accountPlan.uuid}}/payments" },
    "response": {
      "store": "plan2payments",
      "check": [
        {"condition": "json.length === 5"},
        {"condition": "json[0].getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[0].getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[0].getAmount() === {{plans.[0].price}}"},
        {"condition": "json[0].getStatus().name() === 'success'"},
        {"condition": "json[0].getBillObject().getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[0].getBillObject().getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[0].getBillObject().getQuantity() === 1"},
        {"condition": "json[0].getBillObject().getPrice() === {{plans.[0].price}}"},
        {"condition": "json[0].getBillObject().getTotal() === {{plans.[0].price}}"},
        {"condition": "json[0].getBillObject().getStatus().name() === 'paid'"},
        {"condition": "json[1].getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[1].getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[1].getAmount() === {{plans.[0].price}}"},
        {"condition": "json[1].getStatus().name() === 'success'"},
        {"condition": "json[1].getBillObject().getPlan() === '{{plans.[0].uuid}}'"},
        {"condition": "json[1].getBillObject().getAccountPlan() === '{{accountPlan.uuid}}'"},
        {"condition": "json[1].getBillObject().getQuantity() === 1"},
        {"condition": "json[1].getBillObject().getPrice() === {{plans.[0].price}}"},
        {"condition": "json[1].getBillObject().getTotal() === {{plans.[0].price}}"},
        {"condition": "json[1].getBillObject().getStatus().name() === 'paid'"}
      ]
    },
    "after": "set_stripe_error charge"  // set mock so charging the card fails
  }

  // todo: set mock such that charging the card fails

  // todo: fast-forward 32 days, trigger BillingService

  // todo: verify a new Bill exists for accountPlan and Bill remains 'unpaid', and AccountPayment failed

  // todo: verify payment reminder messages have been sent

  // todo: fast-forward 1 day, trigger BillingService

  // todo: verify a new Bill exists for accountPlan and Bill remains 'unpaid', and AccountPayment failed

  // todo: verify payment reminder messages have been sent

  // todo: fast-forward 3 days, trigger BillingService.

  // todo: verify a new Bill exists for accountPlan and Bill remains 'unpaid', and AccountPayment failed

  // todo: verify network associated with plan has been stopped

  // todo: try to start network, fails due to non-payment

  // todo: submit payment

  // todo: start network, succeeds
]